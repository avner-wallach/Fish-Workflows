<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.3.0">
  <Workflow xmlns:q1="clr-namespace:Bonsai.IO;assembly=Bonsai.System" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:q2="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision" xmlns:q3="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting" xmlns="https://horizongir.org/bonsai">
    <Nodes>
      <Expression xsi:type="ReplaySubject">
        <Name>DataPath</Name>
        <BufferSize xsi:nil="true" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Zip" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>Z:\AW\mormyrid_data</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Add" />
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>20180508\</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Take">
          <Count>1</Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:GetFiles">
          <q1:Path>Z:\AW\mormyrid_data20180508\</q1:Path>
          <q1:SearchPattern>*.avi</q1:SearchPattern>
          <q1:SearchOption>TopDirectoryOnly</q1:SearchOption>
        </Combinator>
      </Expression>
      <Expression xsi:type="SelectMany">
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="RepeatCount">
                <Count>1</Count>
              </Combinator>
            </Expression>
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>DataPath</Name>
      </Expression>
      <Expression xsi:type="ExternalizedPropertyOfStringGetFiles">
        <MemberName>Path</MemberName>
        <Name>Path</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Concat" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Concat" />
      </Expression>
      <Expression xsi:type="WindowWorkflow">
        <Workflow>
          <Nodes>
            <Expression xsi:type="ReplaySubject">
              <Name>CropSize</Name>
              <BufferSize xsi:nil="true" />
            </Expression>
            <Expression xsi:type="ReplaySubject">
              <Name>FileName</Name>
              <BufferSize xsi:nil="true" />
            </Expression>
            <Expression xsi:type="q1:CsvWriter">
              <q1:FileName>C:\Users\Avner\Documents\mormyrid data local\20180222\video_20180223_1426_tracking.csv</q1:FileName>
              <q1:Append>false</q1:Append>
              <q1:Overwrite>true</q1:Overwrite>
              <q1:Suffix>None</q1:Suffix>
              <q1:IncludeHeader>false</q1:IncludeHeader>
            </Expression>
            <Expression xsi:type="ReplaySubject">
              <Name>FrameSize</Name>
              <BufferSize xsi:nil="true" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Take">
                <Count>1</Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Zip" />
            </Expression>
            <Expression xsi:type="ExternalizedPropertyOfStringCsvWriter">
              <MemberName>FileName</MemberName>
              <Name>TrackingFileName</Name>
              <Value>C:\Users\Avner\iCloudDrive\Documents\Mormyrid_Data\Data\20180201\video_20180201_1113_tracking</Value>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Take">
                <Count>1</Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Zip" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Item2.X</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Item2.Y</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Item1</Selector>
            </Expression>
            <Expression xsi:type="NestedWorkflow">
              <Name>PolarExtract</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:LinearPolar">
                      <q2:Center>
                        <q2:X>250</q2:X>
                        <q2:Y>400</q2:Y>
                      </q2:Center>
                      <q2:Magnitude>350</q2:Magnitude>
                      <q2:Flags>FillOutliers</q2:Flags>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedPropertyOfPoint2fLinearPolar">
                    <MemberName>Center</MemberName>
                    <Name>Center</Name>
                    <Value>
                      <X>0</X>
                      <Y>0</Y>
                    </Value>
                  </Expression>
                  <Expression xsi:type="q3:PythonTransform">
                    <q3:Script>import clr
clr.AddReference("OpenCV.Net")
from System import Tuple
from OpenCV.Net import *

@returns(Point2f)
def process(value):
  center=Point2f(value.Item1/2,value.Item2/2) 
  return center</q3:Script>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>CropSize</Name>
                  </Expression>
                  <Expression xsi:type="ExternalizedPropertyOfDoubleLinearPolar">
                    <MemberName>Magnitude</MemberName>
                    <Name>Magnitude</Name>
                    <Value>350</Value>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:Crop">
                      <q2:RegionOfInterest>
                        <q2:X>209</q2:X>
                        <q2:Y>60</q2:Y>
                        <q2:Width>200</q2:Width>
                        <q2:Height>243</q2:Height>
                      </q2:RegionOfInterest>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:Threshold">
                      <q2:ThresholdValue>59</q2:ThresholdValue>
                      <q2:MaxValue>255</q2:MaxValue>
                      <q2:ThresholdType>BinaryInv</q2:ThresholdType>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:LargestBinaryRegion" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:BinaryRegionAnalysis" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:FindContours">
                      <q2:Mode>ConnectedComponent</q2:Mode>
                      <q2:Method>ChainApproxNone</q2:Method>
                      <q2:Offset>
                        <q2:X>0</q2:X>
                        <q2:Y>0</q2:Y>
                      </q2:Offset>
                      <q2:MinArea xsi:nil="true" />
                      <q2:MaxArea xsi:nil="true" />
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.Orientation</Selector>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge>
                    <From>0</From>
                    <To>2</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>2</From>
                    <To>7</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>3</From>
                    <To>2</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>4</From>
                    <To>3</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>5</From>
                    <To>4</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>6</From>
                    <To>2</To>
                    <Label>Source3</Label>
                  </Edge>
                  <Edge>
                    <From>7</From>
                    <To>8</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>8</From>
                    <To>11</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>9</From>
                    <To>12</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>10</From>
                    <To>9</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>11</From>
                    <To>10</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>12</From>
                    <To>1</To>
                    <Label>Source1</Label>
                  </Edge>
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Item5</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Item4</Selector>
            </Expression>
            <Expression xsi:type="q3:PythonTransform">
              <q3:Script>@returns(str)
def process(value):
  global output
  L = len(value)-4
  output = value[0:L] + "_tracking.csv"
  return output

</q3:Script>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Size</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="IntProperty">
                <Value>500</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="IntProperty">
                <Value>800</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>FrameSize</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="IntProperty">
                <Value>1120</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="IntProperty">
                <Value>280</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Item3</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Item1</Selector>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>FileName</Name>
            </Expression>
            <Expression xsi:type="ExternalizedPropertyOfInt32IntProperty">
              <MemberName>Value</MemberName>
              <Name>CropWidth</Name>
              <Value>500</Value>
            </Expression>
            <Expression xsi:type="ExternalizedPropertyOfInt32IntProperty">
              <MemberName>Value</MemberName>
              <Name>CropHeight</Name>
              <Value>800</Value>
            </Expression>
            <Expression xsi:type="ExternalizedPropertyOfInt32IntProperty">
              <MemberName>Value</MemberName>
              <Name>SideX</Name>
              <Value>1120</Value>
            </Expression>
            <Expression xsi:type="ExternalizedPropertyOfInt32IntProperty">
              <MemberName>Value</MemberName>
              <Name>SideWidth</Name>
              <Value>280</Value>
            </Expression>
            <Expression xsi:type="NestedWorkflow">
              <Name>HeadFix</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source2</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.Size</Selector>
                  </Expression>
                  <Expression xsi:type="q3:PythonTransform">
                    <q3:Script>import clr
clr.AddReference("OpenCV.Net")
import math
from System import Tuple
from OpenCV.Net import *

@returns(Tuple[Point2f,Point2f,float])
def process(value):
  T = Point2f(value.Item2.Width/2-value.Item1.Item2.X,value.Item2.Height/2-value.Item1.Item2.Y)  
  return Tuple[Point2f,Point2f,float](value.Item1.Item2,T,value.Item1.Item1+(value.Item3/180*math.pi))</q3:Script>
                  </Expression>
                  <Expression xsi:type="InputMapping">
                    <PropertyMappings>
                      <Property name="Translation" selector="Source.Item2" />
                      <Property name="Rotation" selector="Source.Item3" />
                      <Property name="Pivot" selector="Source.Item1" />
                    </PropertyMappings>
                    <Selector>Source.Item1,Source.Item2,Source.Item3</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:AffineTransform">
                      <q2:Pivot>
                        <q2:X>916.8046</q2:X>
                        <q2:Y>165.92308</q2:Y>
                      </q2:Pivot>
                      <q2:Translation>
                        <q2:X>-292.804626</q2:X>
                        <q2:Y>434.0769</q2:Y>
                      </q2:Translation>
                      <q2:Rotation>1.64985335</q2:Rotation>
                      <q2:Scale>
                        <q2:X>1</q2:X>
                        <q2:Y>1</q2:Y>
                      </q2:Scale>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedPropertyOfMatWarpAffine">
                    <MemberName>Transform</MemberName>
                    <Name>HeadfixTransform</Name>
                    <Value />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:WarpAffine">
                      <q2:Transform>-0.07897469,0.9968766,530.9995;-0.9968766,-0.07897469,1527.045</q2:Transform>
                      <q2:Flags>Linear</q2:Flags>
                      <q2:FillValue>
                        <q2:Val0>125</q2:Val0>
                        <q2:Val1>128</q2:Val1>
                        <q2:Val2>128</q2:Val2>
                        <q2:Val3>128</q2:Val3>
                      </q2:FillValue>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:Crop">
                      <q2:RegionOfInterest>
                        <q2:X>374</q2:X>
                        <q2:Y>200</q2:Y>
                        <q2:Width>500</q2:Width>
                        <q2:Height>800</q2:Height>
                      </q2:RegionOfInterest>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:Crop">
                      <q2:RegionOfInterest>
                        <q2:X>484</q2:X>
                        <q2:Y>520</q2:Y>
                        <q2:Width>280</q2:Width>
                        <q2:Height>160</q2:Height>
                      </q2:RegionOfInterest>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>CropSize</Name>
                  </Expression>
                  <Expression xsi:type="q3:PythonTransform">
                    <q3:Script>import clr
clr.AddReference("OpenCV.Net")
from System import Tuple
from OpenCV.Net import *

@returns(Tuple[int,int,int,int])
def process(value):
  X=value.Item3.Width/2-value.Item1/2
  Y=value.Item3.Height/2-value.Item2/2
  Width=value.Item1
  Height=value.Item2
  return Tuple[int,int,int,int](X,Y,Width,Height)</q3:Script>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property name="RegionOfInterest" selector="Source.Item1,Source.Item2,Source.Item3,Source.Item4" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property name="RegionOfInterest" selector="Source.Item1,Source.Item2,Source.Item3,Source.Item4" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="Zip" />
                  </Expression>
                  <Expression xsi:type="q3:PythonTransform">
                    <q3:Script>import clr
clr.AddReference("OpenCV.Net")
from System import Tuple
from OpenCV.Net import *

@returns(Tuple[int,int,int,int])
def process(value):
  Width=value.Item5
  Height=value.Item2/5
  X=value.Item3.Width/2-Width/2
  Y=value.Item3.Height/2-Height/2
  return Tuple[int,int,int,int](X,Y,Width,Height)</q3:Script>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.Item2.Y</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:WarpAffine">
                      <q2:Transform>1,0,-496;0,1,434.0769</q2:Transform>
                      <q2:Flags>Linear</q2:Flags>
                      <q2:FillValue>
                        <q2:Val0>100</q2:Val0>
                        <q2:Val1>0</q2:Val1>
                        <q2:Val2>0</q2:Val2>
                        <q2:Val3>0</q2:Val3>
                      </q2:FillValue>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedPropertyOfMatWarpAffine">
                    <MemberName>Transform</MemberName>
                    <Name>SideTransform</Name>
                    <Value />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:AffineTransform">
                      <q2:Pivot>
                        <q2:X>223.346878</q2:X>
                        <q2:Y>1292.413</q2:Y>
                      </q2:Pivot>
                      <q2:Translation>
                        <q2:X>-496</q2:X>
                        <q2:Y>434.0769</q2:Y>
                      </q2:Translation>
                      <q2:Rotation>0</q2:Rotation>
                      <q2:Scale>
                        <q2:X>1</q2:X>
                        <q2:Y>1</q2:Y>
                      </q2:Scale>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="CombineLatest" />
                  </Expression>
                  <Expression xsi:type="q3:PythonTransform">
                    <q3:Script>import clr
clr.AddReference("OpenCV.Net")
import math
from System import Tuple
from OpenCV.Net import *

@returns(Point2f)
def process(value):
  X = value.Item1.Item3.Width/2-value.Item1.Item4
  Y = value.Item1.Item3.Height/2-value.Item2
  T = Point2f(X,Y)  
  return T</q3:Script>
                  </Expression>
                  <Expression xsi:type="ExternalizedPropertyOfPoint2fAffineTransform">
                    <MemberName>Translation</MemberName>
                    <Name>Translation</Name>
                    <Value>
                      <X>548.653137</X>
                      <Y>-592.412964</Y>
                    </Value>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="CombineLatest" />
                  </Expression>
                  <Expression xsi:type="ExternalizedPropertyOfSingleFloatProperty">
                    <MemberName>Value</MemberName>
                    <Name>base_angle</Name>
                    <Value>14</Value>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>14</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.Item1</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.Item2</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.Item1</Selector>
                  </Expression>
                  <Expression xsi:type="NestedWorkflow">
                    <Name>Flip180Node</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="q2:Flip">
                            <q2:Mode>Both</q2:Mode>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Source.Y</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="q2:Centroid" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="q2:Threshold">
                            <q2:ThresholdValue>60</q2:ThresholdValue>
                            <q2:MaxValue>255</q2:MaxValue>
                            <q2:ThresholdType>BinaryInv</q2:ThresholdType>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="q2:Crop">
                            <q2:RegionOfInterest>
                              <q2:X>200</q2:X>
                              <q2:Y>300</q2:Y>
                              <q2:Width>100</q2:Width>
                              <q2:Height>200</q2:Height>
                            </q2:RegionOfInterest>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="Zip" />
                        </Expression>
                        <Expression xsi:type="q3:PythonTransform">
                          <q3:Name>Flip180</q3:Name>
                          <q3:Script>import clr
clr.AddReference("OpenCV.Net")
import math
from System import Tuple
from OpenCV.Net import *
#@returns(bool)
@returns(Tuple[IplImage,float])
def process(value):
  if(value.Item3&gt;200/2):
    return Tuple[IplImage,float](value.Item1,0)
  else:
    return Tuple[IplImage,float](value.Item2,math.pi)
</q3:Script>
                        </Expression>
                        <Expression xsi:type="ExternalizedPropertyOfRectCrop">
                          <MemberName>RegionOfInterest</MemberName>
                          <Name>RegionOfInterest</Name>
                          <Value>
                            <X>75</X>
                            <Y>325</Y>
                            <Width>100</Width>
                            <Height>200</Height>
                          </Value>
                        </Expression>
                        <Expression xsi:type="q3:PythonTransform">
                          <q3:Script>import clr
clr.AddReference("OpenCV.Net")
from System import Tuple
from OpenCV.Net import *
@returns(Rect)
def process(value):
  width=100
  height=200
  roi=Rect(value.Item1/2-width/2,value.Item2/2-height/2,width,height) 
  return roi</q3:Script>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>CropSize</Name>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge>
                          <From>0</From>
                          <To>7</To>
                          <Label>Source2</Label>
                        </Edge>
                        <Edge>
                          <From>1</From>
                          <To>7</To>
                          <Label>Source3</Label>
                        </Edge>
                        <Edge>
                          <From>2</From>
                          <To>1</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>3</From>
                          <To>2</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>4</From>
                          <To>3</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>5</From>
                          <To>0</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>5</From>
                          <To>7</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>5</From>
                          <To>4</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>7</From>
                          <To>8</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>8</From>
                          <To>6</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>9</From>
                          <To>4</To>
                          <Label>Source2</Label>
                        </Edge>
                        <Edge>
                          <From>10</From>
                          <To>9</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>11</From>
                          <To>10</To>
                          <Label>Source1</Label>
                        </Edge>
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Add" />
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.Item2</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="Zip" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.Item3</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:Threshold">
                      <q2:ThresholdValue>24</q2:ThresholdValue>
                      <q2:MaxValue>255</q2:MaxValue>
                      <q2:ThresholdType>BinaryInv</q2:ThresholdType>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:LargestBinaryRegion" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:BinaryRegionAnalysis" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:FindContours">
                      <q2:Mode>ConnectedComponent</q2:Mode>
                      <q2:Method>ChainApproxNone</q2:Method>
                      <q2:Offset>
                        <q2:X>0</q2:X>
                        <q2:Y>0</q2:Y>
                      </q2:Offset>
                      <q2:MinArea xsi:nil="true" />
                      <q2:MaxArea xsi:nil="true" />
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.Centroid</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.X</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:MorphologicalOperator">
                      <q2:Size>
                        <q2:Width>9</q2:Width>
                        <q2:Height>9</q2:Height>
                      </q2:Size>
                      <q2:Anchor>
                        <q2:X>1</q2:X>
                        <q2:Y>1</q2:Y>
                      </q2:Anchor>
                      <q2:Shape>Ellipse</q2:Shape>
                      <q2:Iterations>1</q2:Iterations>
                      <q2:Operation>Close</q2:Operation>
                    </Combinator>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge>
                    <From>0</From>
                    <To>2</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>0</From>
                    <To>7</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>2</From>
                    <To>25</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>3</From>
                    <To>4</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>4</From>
                    <To>5</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>5</From>
                    <To>6</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>6</From>
                    <To>7</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>7</From>
                    <To>9</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>8</From>
                    <To>25</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>8</From>
                    <To>18</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>8</From>
                    <To>28</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>8</From>
                    <To>29</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>8</From>
                    <To>35</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>9</From>
                    <To>31</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>10</From>
                    <To>16</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>10</From>
                    <To>36</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>11</From>
                    <To>12</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>11</From>
                    <To>22</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>11</From>
                    <To>17</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>12</From>
                    <To>13</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>13</From>
                    <To>9</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>14</From>
                    <To>10</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>15</From>
                    <To>16</To>
                    <Label>Source3</Label>
                  </Edge>
                  <Edge>
                    <From>16</From>
                    <To>1</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>17</From>
                    <To>14</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>18</From>
                    <To>22</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>19</From>
                    <To>10</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>20</From>
                    <To>19</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>21</From>
                    <To>20</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>22</From>
                    <To>23</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>23</From>
                    <To>24</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>24</From>
                    <To>21</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>25</From>
                    <To>3</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>26</From>
                    <To>27</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>27</From>
                    <To>25</To>
                    <Label>Source3</Label>
                  </Edge>
                  <Edge>
                    <From>28</From>
                    <To>34</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>29</From>
                    <To>15</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>30</From>
                    <To>16</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>31</From>
                    <To>30</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>31</From>
                    <To>33</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>32</From>
                    <To>15</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>33</From>
                    <To>34</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>34</From>
                    <To>32</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>35</From>
                    <To>19</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>36</From>
                    <To>42</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>37</From>
                    <To>40</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>38</From>
                    <To>37</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>39</From>
                    <To>38</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>40</From>
                    <To>41</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>41</From>
                    <To>16</To>
                    <Label>Source4</Label>
                  </Edge>
                  <Edge>
                    <From>42</From>
                    <To>39</To>
                    <Label>Source1</Label>
                  </Edge>
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Item4</Selector>
            </Expression>
            <Expression xsi:type="NestedWorkflow">
              <Name>Fishtracker</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="Add" />
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.Centroid</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="Zip" />
                  </Expression>
                  <Expression xsi:type="Scan">
                    <Name>RunningAngle</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                        <Expression xsi:type="MemberSelector">
                          <Selector>Source.Value</Selector>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Source.Accumulation</Selector>
                        </Expression>
                        <Expression xsi:type="Add" />
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="Zip" />
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Source.Item1</Selector>
                        </Expression>
                        <Expression xsi:type="q3:PythonTransform">
                          <q3:Name>DetectFullCircle</q3:Name>
                          <q3:Script>import math
from System import Tuple

@returns(Tuple[float,str])
def process(value):
  if (value&gt;(2*math.pi)): ## whole circle left
    return Tuple[float,str](value-2*math.pi,"L")
  else:
    if (value&lt;(-2*math.pi)): ## whole circle right
      return Tuple[float,str](value+2*math.pi,"R")
    else:
      return Tuple[float,str](value,"")
</q3:Script>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge>
                          <From>0</From>
                          <To>2</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>0</From>
                          <To>3</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>2</From>
                          <To>5</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>3</From>
                          <To>5</To>
                          <Label>Source2</Label>
                        </Edge>
                        <Edge>
                          <From>4</From>
                          <To>7</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>5</From>
                          <To>4</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>6</From>
                          <To>1</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>7</From>
                          <To>6</To>
                          <Label>Source1</Label>
                        </Edge>
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="q3:PythonTransform">
                    <q3:Name>DetectJumps</q3:Name>
                    <q3:Script>import math

@returns(float)
def process(value):
  if ((value.Item2-value.Item1)&gt;2): ## jumped up
    return -(math.pi)
  else:
    if ((value.Item2-value.Item1)&lt;-2): ## jumped down
      return math.pi
    else:
      return 0
</q3:Script>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="Skip">
                      <Count>1</Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SelectMany">
                    <Name>MedianFlter</Name>
                    <Description />
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="ToList" />
                        </Expression>
                        <Expression xsi:type="q3:PythonTransform">
                          <q3:Name>FindMedian</q3:Name>
                          <q3:Script>@returns(float)
def process(value):
  if(len(value)==0):
    return 0
  sort = sorted(value)
  return sort[len(sort)/2]
  
</q3:Script>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge>
                          <From>0</From>
                          <To>2</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>2</From>
                          <To>3</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>3</From>
                          <To>1</To>
                          <Label>Source1</Label>
                        </Edge>
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="ElementCountWindow">
                      <Count>5</Count>
                      <Skip>1</Skip>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.Orientation</Selector>
                  </Expression>
                  <Expression xsi:type="ExternalizedPropertyOfInt32ElementCountWindow">
                    <MemberName>Count</MemberName>
                    <Name>Count2</Name>
                    <Value>5</Value>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:LargestBinaryRegion" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>5</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:BinaryRegionAnalysis" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:FindContours">
                      <q2:Mode>ConnectedComponent</q2:Mode>
                      <q2:Method>ChainApproxNone</q2:Method>
                      <q2:Offset>
                        <q2:X>0</q2:X>
                        <q2:Y>0</q2:Y>
                      </q2:Offset>
                      <q2:MinArea xsi:nil="true" />
                      <q2:MaxArea xsi:nil="true" />
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:Threshold">
                      <q2:ThresholdValue>231</q2:ThresholdValue>
                      <q2:MaxValue>255</q2:MaxValue>
                      <q2:ThresholdType>Binary</q2:ThresholdType>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="Zip" />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:MaskPolygon">
                      <q2:Regions>
                        <q2:ArrayOfPoint>
                          <q2:Point>
                            <q2:X>4</q2:X>
                            <q2:Y>14</q2:Y>
                          </q2:Point>
                          <q2:Point>
                            <q2:X>974</q2:X>
                            <q2:Y>14</q2:Y>
                          </q2:Point>
                          <q2:Point>
                            <q2:X>974</q2:X>
                            <q2:Y>1182</q2:Y>
                          </q2:Point>
                          <q2:Point>
                            <q2:X>4</q2:X>
                            <q2:Y>1182</q2:Y>
                          </q2:Point>
                        </q2:ArrayOfPoint>
                      </q2:Regions>
                      <q2:MaskType>ToZero</q2:MaskType>
                      <q2:FillValue>
                        <q2:Val0>128</q2:Val0>
                        <q2:Val1>0</q2:Val1>
                        <q2:Val2>0</q2:Val2>
                        <q2:Val3>0</q2:Val3>
                      </q2:FillValue>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q2:Grayscale" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="Skip">
                      <Count>5</Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedPropertyOfInt32Skip">
                    <MemberName>Count</MemberName>
                    <Name>Count</Name>
                    <Value>5</Value>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="Skip">
                      <Count>5</Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedPropertyOfInt32Skip">
                    <MemberName>Count</MemberName>
                    <Name>Count3</Name>
                    <Value>5</Value>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.MajorAxisLength</Selector>
                  </Expression>
                  <Expression xsi:type="ExternalizedPropertyOfDoubleThreshold">
                    <MemberName>ThresholdValue</MemberName>
                    <Name>ThresholdValue</Name>
                    <Value>231</Value>
                  </Expression>
                  <Expression xsi:type="ExternalizedPropertyOfThresholdTypesThreshold">
                    <MemberName>ThresholdType</MemberName>
                    <Name>ThresholdType</Name>
                    <Value>Binary</Value>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge>
                    <From>0</From>
                    <To>17</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>1</From>
                    <To>21</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>2</From>
                    <To>0</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>3</From>
                    <To>2</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>4</From>
                    <To>3</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>5</From>
                    <To>4</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>6</From>
                    <To>5</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>7</From>
                    <To>5</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>7</From>
                    <To>6</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>7</From>
                    <To>2</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>8</From>
                    <To>7</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>9</From>
                    <To>8</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>10</From>
                    <To>8</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>11</From>
                    <To>9</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>11</From>
                    <To>1</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>11</From>
                    <To>25</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>12</From>
                    <To>10</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>12</From>
                    <To>22</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>13</From>
                    <To>11</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>14</From>
                    <To>13</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>15</From>
                    <To>14</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>16</From>
                    <To>20</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>17</From>
                    <To>18</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>19</From>
                    <To>15</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>19</From>
                    <To>23</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>20</From>
                    <To>19</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>20</From>
                    <To>17</To>
                    <Label>Source3</Label>
                  </Edge>
                  <Edge>
                    <From>21</From>
                    <To>17</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>22</From>
                    <To>21</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>23</From>
                    <To>17</To>
                    <Label>Source4</Label>
                  </Edge>
                  <Edge>
                    <From>24</From>
                    <To>23</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>25</From>
                    <To>17</To>
                    <Label>Source5</Label>
                  </Edge>
                  <Edge>
                    <From>26</From>
                    <To>15</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>27</From>
                    <To>15</To>
                    <Label>Source3</Label>
                  </Edge>
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:FileCapture">
                <q2:FileName>C:\Users\Avner\Documents\mormyrid data local\20180222\video_20180223_1426.avi</q2:FileName>
                <q2:PlaybackRate>150</q2:PlaybackRate>
                <q2:StartPosition>0</q2:StartPosition>
                <q2:PositionUnits>Frames</q2:PositionUnits>
                <q2:Loop>false</q2:Loop>
                <q2:Playing>true</q2:Playing>
              </Combinator>
            </Expression>
            <Expression xsi:type="ExternalizedPropertyOfStringFileCapture">
              <MemberName>FileName</MemberName>
              <Name>InFileName</Name>
              <Value>C:\Users\Avner\iCloudDrive\Documents\Mormyrid_Data\Data\20180201\video_20180201_1113.avi</Value>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>FileName</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="ExternalizedPropertyOfDoubleThreshold">
              <MemberName>ThresholdValue</MemberName>
              <Name>ThresholdValue</Name>
              <Value>42</Value>
            </Expression>
            <Expression xsi:type="ExternalizedPropertyOfThresholdTypesThreshold">
              <MemberName>ThresholdType</MemberName>
              <Name>ThresholdType</Name>
              <Value>BinaryInv</Value>
            </Expression>
          </Nodes>
          <Edges>
            <Edge>
              <From>2</From>
              <To>36</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>2</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>8</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>9</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>10</From>
              <To>6</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>11</From>
              <To>6</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>12</From>
              <To>6</To>
              <Label>Source3</Label>
            </Edge>
            <Edge>
              <From>13</From>
              <To>6</To>
              <Label>Source4</Label>
            </Edge>
            <Edge>
              <From>14</From>
              <To>6</To>
              <Label>Source5</Label>
            </Edge>
            <Edge>
              <From>15</From>
              <To>6</To>
              <Label>Source6</Label>
            </Edge>
            <Edge>
              <From>16</From>
              <To>7</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>17</From>
              <To>8</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>18</From>
              <To>9</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>19</From>
              <To>9</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>20</From>
              <To>9</To>
              <Label>Source3</Label>
            </Edge>
            <Edge>
              <From>21</From>
              <To>9</To>
              <Label>Source4</Label>
            </Edge>
            <Edge>
              <From>22</From>
              <To>9</To>
              <Label>Source5</Label>
            </Edge>
            <Edge>
              <From>23</From>
              <To>12</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>23</From>
              <To>10</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>23</From>
              <To>11</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>24</From>
              <To>13</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>25</From>
              <To>16</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>26</From>
              <To>18</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>27</From>
              <To>19</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>28</From>
              <To>21</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>29</From>
              <To>22</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>30</From>
              <To>24</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>30</From>
              <To>23</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>30</From>
              <To>15</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>31</From>
              <To>30</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>32</From>
              <To>30</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>32</From>
              <To>14</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>32</From>
              <To>31</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>33</From>
              <To>32</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>33</From>
              <To>17</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>34</From>
              <To>33</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>35</From>
              <To>34</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>37</From>
              <To>32</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>38</From>
              <To>32</To>
              <Label>Source3</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
    </Nodes>
    <Edges>
      <Edge>
        <From>1</From>
        <To>3</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>2</From>
        <To>1</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>3</From>
        <To>5</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>4</From>
        <To>1</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>5</From>
        <To>0</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>6</From>
        <To>10</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>7</From>
        <To>12</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>8</From>
        <To>9</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>9</From>
        <To>6</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>10</From>
        <To>7</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>12</From>
        <To>11</To>
        <Label>Source1</Label>
      </Edge>
    </Edges>
  </Workflow>
  <ExtensionTypes>
    <Type>Bonsai.Reactive.Zip, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.StringProperty, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.AddBuilder, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Take, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.IO.GetFiles, Bonsai.System, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.RepeatCount, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.IO.GetFiles, Bonsai.System, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Concat, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.IO.CsvWriter, Bonsai.System, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.IO.CsvWriter, Bonsai.System, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.LinearPolar, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[OpenCV.Net.Point2f, OpenCV.Net, Version=3.3.0.0, Culture=neutral, PublicKeyToken=null],[Bonsai.Vision.LinearPolar, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonTransform, Bonsai.Scripting, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.Double, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Vision.LinearPolar, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Crop, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Threshold, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.LargestBinaryRegion, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.BinaryRegionAnalysis, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.FindContours, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.IntProperty, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Expressions.IntProperty, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.InputMappingBuilder, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.AffineTransform, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[OpenCV.Net.Mat, OpenCV.Net, Version=3.3.0.0, Culture=neutral, PublicKeyToken=null],[Bonsai.Vision.WarpAffine, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.WarpAffine, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.PropertyMappingBuilder, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.CombineLatest, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[OpenCV.Net.Point2f, OpenCV.Net, Version=3.3.0.0, Culture=neutral, PublicKeyToken=null],[Bonsai.Vision.AffineTransform, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Expressions.FloatProperty, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.FloatProperty, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Flip, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Centroid, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[OpenCV.Net.Rect, OpenCV.Net, Version=3.3.0.0, Culture=neutral, PublicKeyToken=null],[Bonsai.Vision.Crop, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.MorphologicalOperator, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ScanBuilder, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Skip, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.ToList, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.ElementCountWindow, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Reactive.ElementCountWindow, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.MaskPolygon, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Grayscale, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Reactive.Skip, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.Double, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Vision.Threshold, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[OpenCV.Net.ThresholdTypes, OpenCV.Net, Version=3.3.0.0, Culture=neutral, PublicKeyToken=null],[Bonsai.Vision.Threshold, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.FileCapture, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Vision.FileCapture, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
  </ExtensionTypes>
</WorkflowBuilder>